/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ombcrew.taskManagementSample.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Task service. Represents a row in the &quot;OMBTFA_Task&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.ombcrew.taskManagementSample.model.impl.TaskModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.ombcrew.taskManagementSample.model.impl.TaskImpl</code>.
 * </p>
 *
 * @author OMB
 * @see Task
 * @generated
 */
@ProviderType
public interface TaskModel extends BaseModel<Task> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a Task model instance should use the {@link Task} interface instead.
	 */

	/**
	 * Returns the primary key of this Task.
	 *
	 * @return the primary key of this Task
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this Task.
	 *
	 * @param primaryKey the primary key of this Task
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the task ID of this Task.
	 *
	 * @return the task ID of this Task
	 */
	public long getTaskId();

	/**
	 * Sets the task ID of this Task.
	 *
	 * @param taskId the task ID of this Task
	 */
	public void setTaskId(long taskId);

	/**
	 * Returns the group ID of this Task.
	 *
	 * @return the group ID of this Task
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this Task.
	 *
	 * @param groupId the group ID of this Task
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the created user ID of this Task.
	 *
	 * @return the created user ID of this Task
	 */
	public long getCreatedUserId();

	/**
	 * Sets the created user ID of this Task.
	 *
	 * @param createdUserId the created user ID of this Task
	 */
	public void setCreatedUserId(long createdUserId);

	/**
	 * Returns the created user uuid of this Task.
	 *
	 * @return the created user uuid of this Task
	 */
	public String getCreatedUserUuid();

	/**
	 * Sets the created user uuid of this Task.
	 *
	 * @param createdUserUuid the created user uuid of this Task
	 */
	public void setCreatedUserUuid(String createdUserUuid);

	/**
	 * Returns the created date of this Task.
	 *
	 * @return the created date of this Task
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this Task.
	 *
	 * @param createdDate the created date of this Task
	 */
	public void setCreatedDate(Date createdDate);

	/**
	 * Returns the title of this Task.
	 *
	 * @return the title of this Task
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this Task.
	 *
	 * @param title the title of this Task
	 */
	public void setTitle(String title);

	/**
	 * Returns the description of this Task.
	 *
	 * @return the description of this Task
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this Task.
	 *
	 * @param description the description of this Task
	 */
	public void setDescription(String description);

	/**
	 * Returns the assigned user ID of this Task.
	 *
	 * @return the assigned user ID of this Task
	 */
	public long getAssignedUserId();

	/**
	 * Sets the assigned user ID of this Task.
	 *
	 * @param assignedUserId the assigned user ID of this Task
	 */
	public void setAssignedUserId(long assignedUserId);

	/**
	 * Returns the assigned user uuid of this Task.
	 *
	 * @return the assigned user uuid of this Task
	 */
	public String getAssignedUserUuid();

	/**
	 * Sets the assigned user uuid of this Task.
	 *
	 * @param assignedUserUuid the assigned user uuid of this Task
	 */
	public void setAssignedUserUuid(String assignedUserUuid);

	/**
	 * Returns the status of this Task.
	 *
	 * @return the status of this Task
	 */
	public int getStatus();

	/**
	 * Sets the status of this Task.
	 *
	 * @param status the status of this Task
	 */
	public void setStatus(int status);

}